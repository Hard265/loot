# Generated by Django 5.1.6 on 2025-05-19 05:55

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('drive', '0009_alter_file_options_alter_folder_options_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ShareLink',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the share link', primary_key=True, serialize=False)),
                ('permission', models.CharField(choices=[('view', 'Can view'), ('edit', 'Can edit')], default='view', help_text='Permission level for the shared item', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the share link was created')),
                ('expires_at', models.DateTimeField(blank=True, help_text='Optional expiration date for the share link', null=True)),
                ('password', models.CharField(blank=True, help_text='Optional password protection', max_length=100, null=True)),
                ('download_count', models.PositiveIntegerField(default=0, help_text='Number of times the item has been downloaded via this link')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the share link is currently active')),
                ('created_by', models.ForeignKey(help_text='User who created the share link', on_delete=django.db.models.deletion.CASCADE, related_name='created_share_links', to=settings.AUTH_USER_MODEL)),
                ('file', models.ForeignKey(blank=True, help_text='Shared file (if sharing a file)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='share_links', to='drive.file')),
                ('folder', models.ForeignKey(blank=True, help_text='Shared folder (if sharing a folder)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='share_links', to='drive.folder')),
            ],
            options={
                'verbose_name': 'Share Link',
                'verbose_name_plural': 'Share Links',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Share',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the share', primary_key=True, serialize=False)),
                ('permission', models.CharField(choices=[('view', 'Can view'), ('edit', 'Can edit'), ('manage', 'Can manage')], default='view', help_text='Permission level for the shared item', max_length=10)),
                ('shared_at', models.DateTimeField(auto_now_add=True, help_text='When the item was shared')),
                ('expires_at', models.DateTimeField(blank=True, help_text='Optional expiration date for the share', null=True)),
                ('token', models.CharField(default=uuid.uuid4, help_text='Unique token for link-based sharing', max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether the share is currently active')),
                ('file', models.ForeignKey(blank=True, help_text='Shared file (if sharing a file)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shares', to='drive.file')),
                ('folder', models.ForeignKey(blank=True, help_text='Shared folder (if sharing a folder)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shares', to='drive.folder')),
                ('shared_by', models.ForeignKey(help_text='User who is sharing the item', on_delete=django.db.models.deletion.CASCADE, related_name='shared_by_me', to=settings.AUTH_USER_MODEL)),
                ('shared_with', models.ForeignKey(help_text='User with whom the item is being shared', on_delete=django.db.models.deletion.CASCADE, related_name='shared_with_me', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Share',
                'verbose_name_plural': 'Shares',
                'ordering': ['-shared_at'],
                'unique_together': {('shared_with', 'file'), ('shared_with', 'folder')},
            },
        ),
    ]
